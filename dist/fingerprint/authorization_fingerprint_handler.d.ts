import { handler_interface } from "../base/base_notification_handler";
import { Subject } from 'rxjs';
import { AxiosRequestConfig } from "axios";
import { fingerprint_class } from "./fingerprint_handler";
import { ZKTFingerprintService } from "./_utility/app.zkt_fingerprint.service";
import { eventMessageInterface, handleResponseInterface } from "../_interface/fingerprintdata.interface";
import { AuthenticationService } from "../authentication/authentication.service";
import { ResponseMessage } from "../_dependencies/DP/src/interface/export";
export declare class authorization_fingerprint_class extends fingerprint_class implements handler_interface {
    app: string;
    UCP_Id: string;
    n8n_url: string;
    previous_UCP_Id: string;
    ZKTFpService: ZKTFingerprintService;
    eventMessageData: eventMessageInterface[];
    messageData: string;
    fpTemplate: string;
    lowFingerQuality: {};
    edgeNumber: string;
    deviceNo: string;
    primaryFingerprintStatus: {};
    isError: handleResponseInterface;
    private siteLocation;
    private JAVA_SERVER;
    private CSHARP_FINGERPRINT_VERIFICATION_MODULE;
    private PRIMARY_SERVER;
    private VERIFICATION_SETTING;
    private FINGER_EDGE_THRESHOLD;
    private FINGER_SCORE_THRESHOLD;
    authentication: AuthenticationService;
    constructor();
    setZKTFingerprintService(): Promise<void>;
    getEventMessageData(): Promise<void>;
    filteredLatestDateEventMessageData(): void;
    send_message(handler_id: number, steps_id: number): Promise<ResponseMessage>;
    http_config: AxiosRequestConfig;
    handler_id: number;
    publishForAuthorizationRequested(inputObservable: Subject<any>): Subject<unknown>;
    subscribeForAuthorization(inputObservable: Subject<any>): Subject<unknown>;
    subscribeForAuthorizationComplete(inputObservable: Subject<any>): Subject<unknown>;
    subscribeForProcessingCompleted(inputObservable: Subject<any>): Subject<unknown>;
    subscribeForProcessingError(inputObservable: Subject<any>): Subject<unknown>;
    getFingerprintDataService(): ZKTFingerprintService;
}
